-- Yoriichi Menu (versão corrigida e incrementada)
-- Cole em LocalScript (PlayerGui). Feito para PC e Mobile.

-- Services
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

-- Player (aguarda se necessário)
local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
    Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
    LocalPlayer = Players.LocalPlayer
end

-- Notificações (protegidas)
local function Notify(msg)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = "Yoriichi Menu",
            Text = msg,
            Duration = 3
        })
    end)
end

Notify("Bem vindo ao script Yoriichi menu (corrigido)")

-- Cria ScreenGui no PlayerGui (mais compatível)
local sg = Instance.new("ScreenGui")
sg.Name = "YoriichiMenuUI"
sg.IgnoreGuiInset = true
sg.ResetOnSpawn = false
sg.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Helpers de UI
local function newUICorner(parent, radius)
    radius = radius or UDim.new(0,14)
    local c = Instance.new("UICorner")
    c.CornerRadius = radius
    c.Parent = parent
    return c
end

local function newUIStroke(parent, color, thickness)
    local s = Instance.new("UIStroke")
    s.Color = color or Color3.fromRGB(0,0,0)
    s.Thickness = thickness or 2
    s.Parent = parent
    return s
end

local function animateRGB(label)
    spawn(function()
        local t = 0
        while label and label.Parent do
            label.TextColor3 = Color3.fromHSV((t % 1), 0.8, 1)
            t = t + 0.01
            RunService.Heartbeat:Wait()
        end
    end)
end

local function styleButton(btn, colorBase, colorHover, textBase, textHover)
    btn.BackgroundColor3 = colorBase
    btn.TextColor3 = textBase
    -- só aplicar hover se existir (evita problemas mobile)
    if btn.MouseEnter and btn.MouseLeave then
        btn.MouseEnter:Connect(function()
            pcall(function() btn.BackgroundColor3 = colorHover; btn.TextColor3 = textHover end)
        end)
        btn.MouseLeave:Connect(function()
            pcall(function() btn.BackgroundColor3 = colorBase; btn.TextColor3 = textBase end)
        end)
    end
end

-- Drag (suporta mouse e touch)
local function makeDraggable(frame)
    local dragging = false
    local dragStart, startPos

    local function update(input)
        if not dragStart or not startPos then return end
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then
            update(input)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            update(input)
        end
    end)
end

-- MAIN WINDOW (dimensões)
local mainWidth, mainHeight = 560, 380
local main = Instance.new("Frame")
main.Name = "MainWindow"
main.Size = UDim2.fromOffset(mainWidth, mainHeight)
main.Position = UDim2.new(0.5, -mainWidth/2, 0.45, -mainHeight/2)
main.AnchorPoint = Vector2.new(0,0)
main.BackgroundTransparency = 1
main.BorderSizePixel = 0
main.Active = true
main.Parent = sg

local mainBg = Instance.new("Frame", main)
mainBg.Size = UDim2.fromScale(1, 1)
mainBg.BackgroundColor3 = Color3.fromRGB(67, 9, 17)
mainBg.BorderSizePixel = 0
newUICorner(mainBg, UDim.new(0, 24))
newUIStroke(mainBg, Color3.fromRGB(30,10,12), 2)

local grad = Instance.new("UIGradient", mainBg)
grad.Rotation = 90
grad.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(180, 34, 59)),
    ColorSequenceKeypoint.new(0.7, Color3.fromRGB(97, 11, 33)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(67, 9, 17))
})

-- Decorative image (se quiser trocar, ajuste imageUrl)
local imageUrl = "rbxassetid://72447234301333"
local fireDecalId = "rbxassetid://14661356874"
local fire = Instance.new("ImageLabel", mainBg)
fire.Image = fireDecalId
fire.BackgroundTransparency = 1
fire.Size = UDim2.new(1, 0, 0.16, 0)
fire.Position = UDim2.new(0, 0, 0.84, 0)

-- Title
local title = Instance.new("TextLabel", mainBg)
title.Text = "Yoriichi Menu"
title.Size = UDim2.new(1, 0, 0, 46)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 38
title.TextXAlignment = Enum.TextXAlignment.Center
animateRGB(title)

-- Tab bar
local tabBar = Instance.new("Frame", mainBg)
tabBar.Name = "TabBar"
tabBar.Size = UDim2.new(1, -40, 0, 40)
tabBar.Position = UDim2.new(0, 20, 0, 48)
tabBar.BackgroundTransparency = 1
tabBar.BorderSizePixel = 0

local tabNames = {"Universal", "Rng Civilizacion"}
local tabButtons = {}
local selectedTab = 1

local universalPage = Instance.new("Frame", mainBg)
universalPage.Name = "UniversalPage"
universalPage.Size = UDim2.new(1, -40, 1, -110)
universalPage.Position = UDim2.new(0, 20, 0, 88)
universalPage.BackgroundColor3 = Color3.fromRGB(97, 11, 33)
newUICorner(universalPage, UDim.new(0, 18))
universalPage.Visible = true
universalPage.Active = true

local rngPage = Instance.new("Frame", mainBg)
rngPage.Name = "RNGPage"
rngPage.Size = UDim2.new(1, -40, 1, -110)
rngPage.Position = UDim2.new(0, 20, 0, 88)
rngPage.BackgroundColor3 = Color3.fromRGB(97, 11, 33)
newUICorner(rngPage, UDim.new(0, 18))
rngPage.Visible = false
rngPage.Active = true

local function selectTab(idx)
    selectedTab = idx
    for i, btn in ipairs(tabButtons) do
        if i == idx then
            btn.BackgroundColor3 = Color3.fromRGB(180,34,59)
            btn.TextColor3 = Color3.fromRGB(255,255,255)
        else
            btn.BackgroundColor3 = Color3.fromRGB(97,11,33)
            btn.TextColor3 = Color3.fromRGB(220,220,220)
        end
    end
    universalPage.Visible = (idx == 1)
    rngPage.Visible = (idx == 2)
end

for i, name in ipairs(tabNames) do
    local btn = Instance.new("TextButton", tabBar)
    btn.Name = name.."TabBtn"
    btn.Text = name
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 20
    btn.Size = UDim2.new(0.47, 0, 0, 34)
    btn.Position = UDim2.new((i-1)*0.5 + 0.015, 0, 0, 3)
    btn.BorderSizePixel = 0
    btn.ZIndex = 11
    btn.AutoButtonColor = false
    btn.Active = true
    newUICorner(btn, UDim.new(1,0))
    styleButton(btn, Color3.fromRGB(97,11,33), Color3.fromRGB(180,34,59), Color3.fromRGB(220,220,220), Color3.fromRGB(255,255,255))
    btn.Activated:Connect(function() selectTab(i) end)
    tabButtons[i] = btn
end

-- Render drag
makeDraggable(main)
makeDraggable(mainBg)

-- Minimize and Close (top-right)
local minBtn = Instance.new("TextButton", mainBg)
minBtn.Text = "-"
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 22
minBtn.Size = UDim2.new(0,36,0,28)
minBtn.Position = UDim2.new(1, -84, 0, 8)
minBtn.BorderSizePixel = 0
minBtn.ZIndex = 13
minBtn.AutoButtonColor = true
minBtn.Active = true
newUICorner(minBtn, UDim.new(1, 0))
newUIStroke(minBtn, Color3.fromRGB(67, 9, 17), 1)

local closeBtn = Instance.new("TextButton", mainBg)
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 21
closeBtn.Size = UDim2.new(0,36,0,28)
closeBtn.Position = UDim2.new(1, -44, 0, 8)
closeBtn.BorderSizePixel = 0
closeBtn.ZIndex = 13
closeBtn.AutoButtonColor = true
closeBtn.Active = true
newUICorner(closeBtn, UDim.new(1, 0))
newUIStroke(closeBtn, Color3.fromRGB(97,11,33), 1)

-- Fast tween helper (rápido e suave)
local function tweenQuick(obj, props, time)
    time = time or 0.18
    local ok, t = pcall(function()
        return TweenService:Create(obj, TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), props)
    end)
    if ok and t then t:Play() end
end

-- Mini-window (gerado ao minimizar)
local function createMiniWindow()
    if sg:FindFirstChild("MiniWindow") then return sg:FindFirstChild("MiniWindow") end
    local miniFrame = Instance.new("Frame", sg)
    miniFrame.Name = "MiniWindow"
    miniFrame.Size = UDim2.new(0,56,0,56)
    miniFrame.Position = UDim2.new(0, 16, 0.6, 0)
    miniFrame.BackgroundColor3 = Color3.fromRGB(180, 34, 59)
    miniFrame.BorderSizePixel = 0
    newUICorner(miniFrame, UDim.new(0, 18))
    newUIStroke(miniFrame, Color3.fromRGB(67, 9, 17), 2)
    miniFrame.ZIndex = 999
    local miniImage = Instance.new("ImageButton", miniFrame)
    miniImage.Size = UDim2.new(0.82,0,0.82,0)
    miniImage.Position = UDim2.new(0.09,0,0.09,0)
    miniImage.BackgroundTransparency = 1
    miniImage.Image = imageUrl
    miniImage.AutoButtonColor = true
    newUICorner(miniImage, UDim.new(1,0))
    makeDraggable(miniFrame)
    miniImage.Activated:Connect(function()
        if sg:FindFirstChild("MiniWindow") then sg:FindFirstChild("MiniWindow"):Destroy() end
        main.Visible = true
        tweenQuick(main, {Position = UDim2.new(0.5, -mainWidth/2, 0.45, -mainHeight/2)}, 0.18)
    end)
    return miniFrame
end

-- Close behavior (fast)
closeBtn.Activated:Connect(function()
    -- quick shrink + destroy
    -- proteger caso já destruído
    pcall(function()
        tweenQuick(main, {Size = UDim2.new(0,0,0,0)}, 0.12)
        task.wait(0.12)
        if sg and sg.Parent then sg:Destroy() end
    end)
end)

-- Minimize behavior: cria mini janela pra restaurar
minBtn.Activated:Connect(function()
    -- se já minimizado, restaura
    if sg:FindFirstChild("MiniWindow") then
        local mini = sg:FindFirstChild("MiniWindow")
        mini:Destroy()
        main.Visible = true
        tweenQuick(main, {Position = UDim2.new(0.5, -mainWidth/2, 0.45, -mainHeight/2)}, 0.18)
        return
    end

    -- animate main out and create mini
    tweenQuick(main, {Position = UDim2.new(0.02, 0, 0.6, 0)}, 0.12)
    task.wait(0.12)
    main.Visible = false
    createMiniWindow()
end)

-- Toggle menu with M (compatível)
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.M then
        main.Visible = not main.Visible
        if main.Visible and sg:FindFirstChild("MiniWindow") then
            sg:FindFirstChild("MiniWindow"):Destroy()
        end
    end
end)

-- ---------------------------
-- Universal funções (Correr/Pular)
-- ---------------------------
local runBtn = Instance.new("TextButton", universalPage)
runBtn.Name = "RunFastBtn"
runBtn.Text = "Correr Rápido"
runBtn.Font = Enum.Font.GothamBold
runBtn.TextSize = 22
runBtn.Size = UDim2.new(0.8, 0, 0, 50)
runBtn.Position = UDim2.new(0.1, 0, 0, 30)
styleButton(runBtn, Color3.fromRGB(180,34,59), Color3.fromRGB(255, 80, 80), Color3.fromRGB(255,255,255), Color3.fromRGB(255,255,255))
runBtn.BorderSizePixel = 0
newUICorner(runBtn, UDim.new(0, 12))
newUIStroke(runBtn, Color3.fromRGB(67, 9, 17), 2)
runBtn.ZIndex = 13
runBtn.AutoButtonColor = true

local jumpBtn = Instance.new("TextButton", universalPage)
jumpBtn.Name = "JumpHighBtn"
jumpBtn.Text = "Pular Alto"
jumpBtn.Font = Enum.Font.GothamBold
jumpBtn.TextSize = 22
jumpBtn.Size = UDim2.new(0.8, 0, 0, 50)
jumpBtn.Position = UDim2.new(0.1, 0, 0, 90)
styleButton(jumpBtn, Color3.fromRGB(180,34,59), Color3.fromRGB(255, 80, 80), Color3.fromRGB(255,255,255), Color3.fromRGB(255,255,255))
jumpBtn.BorderSizePixel = 0
newUICorner(jumpBtn, UDim.new(0, 12))
newUIStroke(jumpBtn, Color3.fromRGB(67, 9, 17), 2)
jumpBtn.ZIndex = 13
jumpBtn.AutoButtonColor = true

local fastActive = false
local jumpActive = false
local origWalkSpeed = 16
local origJumpPower = 50

local function setSpeed(enable)
    local char = LocalPlayer.Character
    local humanoid = char and char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        if enable then
            origWalkSpeed = humanoid.WalkSpeed or origWalkSpeed
            humanoid.WalkSpeed = 65
        else
            humanoid.WalkSpeed = origWalkSpeed or 16
        end
    end
end

local function setJump(enable)
    local char = LocalPlayer.Character
    local humanoid = char and char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        if enable then
            origJumpPower = humanoid.JumpPower or origJumpPower
            humanoid.JumpPower = 135
        else
            humanoid.JumpPower = origJumpPower or 50
        end
    end
end

runBtn.Activated:Connect(function()
    fastActive = not fastActive
    setSpeed(fastActive)
    runBtn.Text = fastActive and "Correr Rápido (ON)" or "Correr Rápido"
    Notify(fastActive and "Velocidade aumentada!" or "Velocidade normal!")
end)

jumpBtn.Activated:Connect(function()
    jumpActive = not jumpActive
    setJump(jumpActive)
    jumpBtn.Text = jumpActive and "Pular Alto (ON)" or "Pular Alto"
    Notify(jumpActive and "Pulo aumentado!" or "Pulo normalizado!")
end)

LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid")
    setSpeed(fastActive)
    setJump(jumpActive)
end)

-- ---------------------------
-- RNG CIVILIZACION (TP + Auto Botão switch)
-- ---------------------------
local tpBtn = Instance.new("TextButton", rngPage)
tpBtn.Name = "TpAetherButton"
tpBtn.Text = "Tp Aether"
tpBtn.Font = Enum.Font.GothamBold
tpBtn.TextSize = 22
tpBtn.Size = UDim2.new(0.8, 0, 0, 50)
tpBtn.Position = UDim2.new(0.1, 0, 0, 30)
styleButton(tpBtn, Color3.fromRGB(180,34,59), Color3.fromRGB(255, 80, 80), Color3.fromRGB(255,255,255), Color3.fromRGB(255,255,255))
tpBtn.BorderSizePixel = 0
tpBtn.ZIndex = 13
newUICorner(tpBtn, UDim.new(0, 12))
newUIStroke(tpBtn, Color3.fromRGB(67, 9, 17), 2)
tpBtn.AutoButtonColor = true

local aetherCFrame = CFrame.new(
    2029.67358, -120.431458, 1696.65967,
    0.985694766, -6.11008559e-08, 0.168540359,
    5.55547466e-08, 1, 3.76220406e-08,
    -0.168540359, -2.69409566e-08, 0.985694766
)

tpBtn.Activated:Connect(function()
    local char = LocalPlayer.Character
    local root = char and char:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = aetherCFrame + Vector3.new(0, 3, 0)
        Notify("Teleportado para o Aether!")
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then pcall(function() humanoid:ChangeState(Enum.HumanoidStateType.GettingUp) end) end
    else
        Notify("Não foi possível teleportar.")
    end
end)

-- Função de farm (teleport + click)
local function findGamblingFolder()
    local f = Workspace:FindFirstChild("LETS GO GAMBLING")
    if f then return f end
    -- tentativa alternativa (case-insensitive)
    for _,v in ipairs(Workspace:GetChildren()) do
        if v:IsA("Folder") and v.Name:lower():find("gambling") then
            return v
        end
    end
    return nil
end

local function teleportAndClickAllButtons()
    local folder = findGamblingFolder()
    if not folder then
        Notify("Pasta 'LETS GO GAMBLING' não encontrada!")
        return
    end

    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then Notify("Sem HumanoidRootPart!"); return end

    local originalCFrame = hrp.CFrame
    local buttonParts = {}

    for _, portable in ipairs(folder:GetChildren()) do
        if portable:IsA("Model") or portable:IsA("Folder") then
            local buttonPart = portable:FindFirstChild("Button") or portable:FindFirstChildWhichIsA("BasePart")
            if buttonPart and buttonPart:IsA("BasePart") then
                table.insert(buttonParts, buttonPart)
            end
        end
    end

    if #buttonParts == 0 then
        Notify("Nenhum botão encontrado!")
        return
    end

    for _, buttonPart in ipairs(buttonParts) do
        pcall(function()
            hrp.CFrame = (buttonPart.CFrame or CFrame.new(buttonPart.Position)) + Vector3.new(0, 3, 0)
        end)
        for _, child in ipairs(buttonPart:GetChildren()) do
            if child:IsA("ClickDetector") then
                pcall(function() fireclickdetector(child) end)
            end
        end
        task.wait(0.06)
    end

    pcall(function() hrp.CFrame = originalCFrame end)
    Notify("Todos os botões foram clicados!")
end

-- SWITCH AUTO BOTÃO (com Activated -> 1 clique/tap)
local autoSwitch = Instance.new("TextButton", rngPage)
autoSwitch.Name = "AutoSwitch"
autoSwitch.Text = "Auto Botão (OFF)"
autoSwitch.Font = Enum.Font.GothamBold
autoSwitch.TextSize = 20
autoSwitch.Size = UDim2.new(0.7, 0, 0, 44)
autoSwitch.Position = UDim2.new(0.15, 0, 1, -62)
autoSwitch.BackgroundColor3 = Color3.fromRGB(97,11,33)
autoSwitch.TextColor3 = Color3.fromRGB(220,220,220)
autoSwitch.BorderSizePixel = 0
autoSwitch.ZIndex = 15
autoSwitch.AutoButtonColor = false
newUICorner(autoSwitch, UDim.new(0, 12))
newUIStroke(autoSwitch, Color3.fromRGB(180,34,59), 2)

local autoEnabled = false

local function toggleAuto()
    autoEnabled = not autoEnabled
    if autoEnabled then
        autoSwitch.Text = "Auto Botão (ON)"
        autoSwitch.BackgroundColor3 = Color3.fromRGB(180,34,59)
        autoSwitch.TextColor3 = Color3.fromRGB(255,255,255)
        Notify("Auto Botão ligado!")
    else
        autoSwitch.Text = "Auto Botão (OFF)"
        autoSwitch.BackgroundColor3 = Color3.fromRGB(97,11,33)
        autoSwitch.TextColor3 = Color3.fromRGB(220,220,220)
        Notify("Auto Botão desligado!")
    end
end

-- usa Activated (união de click/touch/gamepad) -> não precisa segurar
autoSwitch.Activated:Connect(toggleAuto)

-- Loop do auto (rode no background)
task.spawn(function()
    while true do
        if autoEnabled then
            -- chama a função protegida
            pcall(teleportAndClickAllButtons)
            -- aguarda um intervalo curto, ajustável
            task.wait(1)
        else
            task.wait(0.2)
        end
    end
end)

-- Final touches: animação de entrada e seleção de tab inicial
main.Visible = false
task.wait(0.12)
main.Visible = true
tweenQuick(main, {Position = UDim2.new(0.5, -mainWidth/2, 0.45, -mainHeight/2)}, 0.62)
selectTab(1)

-- Fim do script
Notify("Script carregado corretamente — pronto para uso!")
